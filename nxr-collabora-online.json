{
  "collabora-online (NXR)": {
    "containers": {
      "nxr-collabora-code": {
        "image": "collabora/code",
        "tag": "latest",
        "launch_order": 1,
        "ports": {
          "9980": {
            "description": "",
            "host_default": 9980,
            "label": "Http port",
            "protocol": "tcp",
            "ui": true
          }
        },
        "environment": {
          "VIRTUAL_HOST": {
            "description": "Specify the virtual host name to add to the nginx proxy.",
            "label": "Virtual Host",
            "index": 1
          },
          "LETSENCRYPT_HOST": {
            "description": "Specify the virtual host name for letsencrypt - likely the same as the virtual host.",
            "label": "Letsencrypt Host",
            "index": 2
          },
          "VIRTUAL_PORT": {
            "description": "Should be the same as the exposed port used by Collabora to configure the virtual hosts entries in the Nginx proxy Rockon, if it's running. ",
            "label": "Letsencrypt Host",
            "index": 3
          },
          "LETSENCRYPT_EMAIL": {
            "description": "Specify an email for letsencrypt.",
            "label": "Letsencrypt Email",
            "index": 4
          },
          "LETSENCRYPT_TEST": {
            "description": "Specify using letsencrypt test or production certificate generation.",
            "label": "Letsencrypt test(true/false)",
            "index": 5
          },
          "domain": {
            "description": "Hostname(s) that your own Nextcloud/Owncloud runs on. Also make sure to escape all dots with double backslashes (\\), since this string will be evaluated as a regular expression (and your bash 'eats' the first backslash.) If you want to use the docker container with more than one Nextcloud, you'll need to use 'domain=cloud\\\\.nextcloud\\\\.com\\|second\\\\.nexcloud\\\\.com' instead. (All hosts seperated by \\|.)",
            "label": "Own-/Nextcloud hostname(s)",
            "index": 6
          },
          "username": {
            "description": "The user name to access the admin console. This needs to be defined along with the admin password. ",
            "label": "Admin username",
            "index": 7
          },
          "password": {
            "description": "The password to access the admin console. This needs to be defined along with the admin username. ",
            "label": "Admin password",
            "index": 8
          },
          "cert_domain": {
            "description": "When this environment variable is set, then startup script will generate a new SSL certificate signed by a dummy CA for this domain, not for localhost. ",
            "label": "Cert domain",
            "index": 9
          },
          "server_name": {
            "description": "When this environment variable is set, then its value will be used as server name in /etc/loolwsd/loolwsd.xml. Without this, CODE is not delivering a correct host for the websocket connection in case of a proxy in front of it.",
            "label": "Server name",
            "index": 10
          }
        },
        "opts": [
          ["--net", "rockon_br0"],
          ["-h", "nxr-collabora-code"],
          ["--cap-add", "MKNOD"],
          ["--env", "VIRTUAL_PROTO=https"]
        ]
      }
    },
    "description": "Collabora Online is a Librnxrffice-based online office suite that can be integrated with Owncloud or Nextcloud. ",
    "more_info": "No shares are needed for this Rockon. By default the container binds to port 9980 and uses secure TLS connections for communication. The UI link can be used to test if Collabora is running and the string, <b>OK</b> is returned from the URL of UI link.  ",
    "ui": {
      "https": true,
      "slug": ""
    },
    "version": "1.0.0",
    "website": "https://www.collaboraoffice.com/code/"
  }
}
